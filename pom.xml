<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.nwg.edl</groupId>
    <artifactId>Chimera</artifactId>
    <version>1.0-SNAPSHOT</version>
    <developers>
        <developer>
            <id>0001</id><name>Kumar, Manish</name><email>manish.kumar.gupta@outlook.com</email>
        </developer>
        <developer>
            <id>0002</id><name>Mohit Ranjan</name><email>manish.kumar.gupta@outlook.com</email>
        </developer>
        <developer>
            <id>0003</id><name>Prashant Kumar</name><email>manish.kumar.gupta@outlook.com</email>
        </developer>
        <developer>
            <id>0004</id><name>Vivek</name><email>manish.kumar.gupta@outlook.com</email>
        </developer>
        <developer>
            <id>0005</id><name>Abhinav</name><email>manish.kumar.gupta@outlook.com</email>
        </developer>
    </developers>
<inceptionYear>2024</inceptionYear>
    <name>Chimera Data Engineering</name>
    <description> Data Engineering</description>
    <packaging>pom</packaging>





    <properties>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Recovery dependencies -->
        <apache.httpcomponents.httpcore.version>4.4.14</apache.httpcomponents.httpcore.version>
        <apache.httpcomponents.httpclient.version>4.5.14</apache.httpcomponents.httpclient.version>
        <ini4j.version>0.5.4</ini4j.version>
        <jsoup.version>1.15.3</jsoup.version>
        <amazonaws.sdk.version>1.12.376</amazonaws.sdk.version>

        <!--Hibernate dependencies-->
        <sqlite.jdbc.version>3.25.2</sqlite.jdbc.version>
        <hibernate.version>5.2.16.Final</hibernate.version>
        <sqlite.dialect.version>0.1.2</sqlite.dialect.version>
        <hibernate.version>5.2.16.Final</hibernate.version>
        <jackson.dataformat.csv.version>2.3.0</jackson.dataformat.csv.version>
        <apache.commons.pool.version>2.11.1</apache.commons.pool.version>

        <!-- Compilation Option -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.release>17</maven.compiler.release>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Sonar Option -->
        <jacoco.version>0.8.4</jacoco.version>
        <jacoco.coveredratio>0</jacoco.coveredratio>

        <!-- Covered Ration is Set to 0 once Sonar Fixes are done we can reset -->
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.exclusions>target</sonar.exclusions>
        <jacoco-maven-plugin_version>0.8.9</jacoco-maven-plugin_version>
        <sonar-maven-plugin_version>3.9.1.2184</sonar-maven-plugin_version>

        <!-- Email version -->
        <javax.mail.version>1.6.2</javax.mail.version>
        <scala.major.version>2.12</scala.major.version>
        <scala.minor.version>16</scala.minor.version>
        <scala.version>${scala.major.version}.${scala.minor.version}</scala.version>

        <!-- Spark and its dependencies -->
        <spark.version>3.3.0</spark.version>
        <spark.kafka.sql.version>0-10</spark.kafka.sql.version>
        <hadoop.version>3.3.3</hadoop.version>

        <!-- Logging, Monitoring and DQ -->
        <log4j.api.version>2.20.0</log4j.api.version>
        <amazon.deequ.version>2.0.1-spark-3.2</amazon.deequ.version>
        <spark.measure.version>0.22</spark.measure.version>
        <spline.agent.version>1.0.4</spline.agent.version>

        <!-- 2023 Tachyon work -->
        <ignite.version>2.14.0</ignite.version>
        <iceberg.version>1.4.3</iceberg.version>
        <delta.version>2.2.0</delta.version>

        <!-- Temporary Database capability -->
        <apache.derby.version>10.12.1.1</apache.derby.version>
        <apache.sqlite.version>3.40.0.0</apache.sqlite.version>

        <!-- testing -->
        <junit.version>5.9.1</junit.version>
        <scalatest.version>3.2.14</scalatest.version>

        <!-- Build configurations -->
        <maven.scala.plugin.version>4.7.2</maven.scala.plugin.version>
        <maven.assembly-plugin.version>3.4.2</maven.assembly-plugin.version>
        <maven.compiler.plugin.version>3.11.0</maven.compiler.plugin.version>
        <checkstyle-maven-plugin.version>3.0.0</checkstyle-maven-plugin.version>
        <scalatest.maven.plugin.version>2.1.0</scalatest.maven.plugin.version>

        <!-- Key dependencies -->
        <kafka.clients.version>3.1.0</kafka.clients.version>
        <aws.java.sdk2.version>2.26.16</aws.java.sdk2.version>
        <hive.metastore.version>1.18.24</hive.metastore.version>

        <!-- Helper and utility dependencies -->
        <google.guava.version>31.1-jre</google.guava.version>
        <snake.yaml.version>1.33</snake.yaml.version>
        <lombok.version>1.18.24</lombok.version>
        <json.simple.version>1.1.1</json.simple.version>
        <code.gson.version>2.9.0</code.gson.version>
        <commons-text.version>1.10.0</commons-text.version>
        <commons-csv.version>1.9.0</commons-csv.version>
    </properties>
    <!--<repositories><repository><id>gitlab-maven</id><url>https://gitlab.com/manishkumargupta/TestScala.git</url></repository></repositories><distributionManagement><repository><id>gitlab-maven</id><url>https://gitlab.com/manishkumargupta/TestScala.git</url></repository><snapshotRepository><id>gitlab-maven</id><url>https://gitlab.com/manishkumargupta/TestScala.git</url></snapshotRepository></distributionManagement>-->
    <dependencies>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.5.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>5.0.1</version> <!-- Use the latest version -->
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.findify/s3mock -->
        <dependency>
            <groupId>io.findify</groupId>
            <artifactId>s3mock_2.12</artifactId>
            <version>0.2.6</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>2.3</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.2.222</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.api.version}</version> <!-- Use the latest version -->
        </dependency>
        <!-- Log4j API -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.api.version}</version> <!-- Use the latest version -->
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-avro_2.12</artifactId>
            <version>3.3.0</version>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.4</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.12.16</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>2.12.16</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>2.12.16</version>
        </dependency>


        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
            <version>2.11.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-token-provider-kafka-0-10_2.12</artifactId>
            <version>3.3.0</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.13.5</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.module/jackson-module-scala -->
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_2.10</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.12</artifactId>
            <version>3.2.17</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-csv</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.13.3</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml</groupId>
            <artifactId>classmate</artifactId>
            <version>1.3.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.maven.shared</groupId>
            <artifactId>maven-invoker</artifactId>
            <version>3.0.1</version>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <plugin>
                  <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.0.1</version>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${maven.scala.plugin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin_version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <release>${maven.compiler.source}</release>
                </configuration>
            </plugin>
            <!-- Testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scalatest.maven.plugin.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- enforcers -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M2</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <banDuplicatePomDependencyVersions/>
                                <requireJavaVersion>
                                    <version>1.8</version>
                                    <message>Invalid Java version. It should be 1.8</message>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Style checks Commented By Manish
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <verbose>true</verbose>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnWarning>true</failOnWarning>
                    <sourceDirectories>
                        <directory>${basedir}/src/main/java</directory>
                        <directory>${basedir}/src/main/scala</directory>
                    </sourceDirectories>
                    <testSourceDirectories>
                        <directory>${basedir}/src/test/java</directory>
                    </testSourceDirectories>
                    <configLocation>scalastyle-config.xml</configLocation>
                    <outputFile>${basedir}/target/scalastyle-output.xml</outputFile>
                    <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
                    <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
                </configuration>
                <executions>
                    <execution>
                        <id>styleCheck</id>
                        <phase> verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <sourceDirectories>undefined
                        <directory>${basedir}/src/main/java</directory>
                        <directory>${basedir}/src/main/scala</directory>
                    </sourceDirectories>
                    <testSourceDirectories>
                        <directory>${basedir}/src/test/java</directory>
                    </testSourceDirectories>
                    <configLocation>checkstyle.xml</configLocation>
                    <outputFile>${basedir}/target/checkstyle-output.xml</outputFile>
                    <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
                    <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>9.3</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
        </plugins>
    </build>
    <modules>
        <module>core</module>

    </modules>
</project>