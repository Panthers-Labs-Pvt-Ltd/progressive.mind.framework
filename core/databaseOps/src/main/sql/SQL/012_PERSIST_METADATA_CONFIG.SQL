CREATE TABLE IF NOT EXISTS PERSIST_METADATA_CONFIG (
    PERSIST_ID UUID DEFAULT GEN_RANDOM_UUID() PRIMARY KEY,
    SEQUENCE_NUMBER INTEGER,
 	PIPELINE_ID UUID NOT NULL,
	DATA_SOURCE_CONNECTION_ID UUID NULL,
    DATABASE_NAME VARCHAR(255),
    TABLE_NAME VARCHAR(255),
    SCHEMA_NAME VARCHAR(255),
    PARTITION_KEYS TEXT,
    TARGET_SQL TEXT,
    TARGET_PATH TEXT,
    WRITE_MODE VARCHAR(255) CHECK (WRITE_MODE IN ('OVERWRITE', 'APPEND')),
    SINK_CONFIGURATION TEXT,
    SORT_COLUMNS TEXT,
    DEDUP_COLUMNS TEXT,
    KAFKA_TOPIC VARCHAR(255),
    KAFKA_KEY TEXT,
    KAFKA_MESSAGE TEXT,
    CREATED_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT CURRENT_USER,
    UPDATED_TIMESTAMP TIMESTAMP,
    UPDATED_BY VARCHAR(255),
    ACTIVE_FLAG VARCHAR(1) DEFAULT 'Y' :: CHARACTER VARYING,
    CONSTRAINT PK_PERSIST_CONFIG UNIQUE (PIPELINE_ID, SEQUENCE_NUMBER),
    CONSTRAINT FK_PIPELINE_ID FOREIGN KEY (PIPELINE_ID) REFERENCES DATA_PIPELINES (PIPELINE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_DATA_SOURCE_CONNECTION FOREIGN KEY (DATA_SOURCE_CONNECTION_ID) REFERENCES DATA_SOURCES_CONNECTIONS (connection_id) ON DELETE CASCADE ON UPDATE CASCADE
);

COMMENT ON COLUMN PERSIST_METADATA_CONFIG.pipeline_id IS 'ID of the pipeline. This needs to be defined in pipeline';
COMMENT ON COLUMN PERSIST_METADATA_CONFIG.sequence_number IS 'Sequence No. If a pipeline has multiple sinks, this field can be used to sequence the sinks';
