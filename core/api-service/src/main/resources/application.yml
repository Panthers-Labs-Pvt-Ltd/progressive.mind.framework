server:
  port: 8080
spring:
  application:
    name: chimera_api_service
  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/postgres # PostgreSQL for default environment
    driverClassName: org.postgresql.Driver
    username: postgres
    password: password
    hikari:
      poolName: PostgresqlHikariCP
      maxLifetime: 1200000 # 20 minutes
      maximumPoolSize: 10 # Maximum connections in the pool
      minimumIdle: 1 # Minimum idle connections in the pool
  security:
    oauth2:
      resourceserver:
        jwt:
          client-id: chimera_api
          issuer-uri: http://localhost:3000/realms/chimera-api-service-realm
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

jwt:
  auth:
    converter:
      resource-id: chimera_api # Resource ID for JWT authentication
      principle-attribute: chimera # Attribute to be used as principal

management:
  context-path: /manage # Management endpoint context
  endpoints:
    web:
      exposure:
        include: health,info,metrics # Expose specific management endpoints

security:
  userName: chimera # Username for private endpoint access
  password: password # Password for private endpoint access

resilience4j.circuitbreaker:
  instances:
    externalService:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 20
      waitDurationInOpenState: 50s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10

resilience4j.ratelimiter:
  instances:
    externalService:
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      registerHealthIndicator: true
      eventConsumerBufferSize: 100

